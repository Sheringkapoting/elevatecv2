
@page "/analyze"
@inject ISnackbar Snackbar

<PageTitle>Resume Analysis - Elevate CV</PageTitle>

<div class="max-w-7xl mx-auto">
    <AnalyzeHeader />
    
    <MudTabs Class="max-w-full w-full" Outlined="false" Position="Position.Top" Rounded="true" Border="true" ApplyEffectsToContainer="true">
        <MudTabPanel Text="Upload & Analyze" Icon="@Icons.Material.Filled.Upload">
            <UploadTab 
                FileName="@FileName"
                JobDescription="@JobDescription"
                IsAnalyzing="@IsAnalyzing"
                OnResumeFileChanged="OnResumeFileChanged"
                OnJobDescriptionChanged="UpdateJobDescription"
                HandleAnalyzeClick="HandleAnalyze" />
        </MudTabPanel>
        <MudTabPanel Text="Results & Recommendations" Icon="@Icons.Material.Filled.Assessment" Disabled="!AnalysisComplete">
            @if (AnalysisComplete)
            {
                <ResultsTab />
            }
        </MudTabPanel>
    </MudTabs>
</div>

@code {
    private string? FileName { get; set; }
    private string JobDescription { get; set; } = string.Empty;
    private bool IsAnalyzing { get; set; }
    private bool AnalysisComplete { get; set; }
    
    private async Task OnResumeFileChanged(InputFileChangeEventArgs e)
    {
        var file = e.File;
        if (file != null)
        {
            FileName = file.Name;
            Snackbar.Add($"File \"{file.Name}\" ready for analysis.", Severity.Success);
        }
    }
    
    private void UpdateJobDescription(string value)
    {
        JobDescription = value;
    }
    
    private async Task HandleAnalyze()
    {
        if (string.IsNullOrEmpty(FileName))
        {
            Snackbar.Add("Please upload your resume first.", Severity.Error);
            return;
        }
        
        if (string.IsNullOrEmpty(JobDescription))
        {
            Snackbar.Add("Please paste the job description to compare against.", Severity.Error);
            return;
        }
        
        IsAnalyzing = true;
        
        // Simulate analysis process
        await Task.Delay(2500);
        
        IsAnalyzing = false;
        AnalysisComplete = true;
        Snackbar.Add("Your resume has been analyzed against the job description.", Severity.Success);
    }
}
